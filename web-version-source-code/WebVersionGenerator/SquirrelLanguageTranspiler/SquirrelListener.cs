//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./web-version-source-code/SquirrelLanguageGrammar/Squirrel.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SquirrelParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public interface ISquirrelListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId([NotNull] SquirrelParser.IdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId([NotNull] SquirrelParser.IdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.boolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean([NotNull] SquirrelParser.BooleanContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.boolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean([NotNull] SquirrelParser.BooleanContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.whileKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileKeyword([NotNull] SquirrelParser.WhileKeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.whileKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileKeyword([NotNull] SquirrelParser.WhileKeywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.str"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStr([NotNull] SquirrelParser.StrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.str"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStr([NotNull] SquirrelParser.StrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.derefexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDerefexp([NotNull] SquirrelParser.DerefexpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.derefexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDerefexp([NotNull] SquirrelParser.DerefexpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.stats"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStats([NotNull] SquirrelParser.StatsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.stats"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStats([NotNull] SquirrelParser.StatsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.statincludingemptystatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatincludingemptystatement([NotNull] SquirrelParser.StatincludingemptystatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.statincludingemptystatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatincludingemptystatement([NotNull] SquirrelParser.StatincludingemptystatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDeclaration([NotNull] SquirrelParser.FunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDeclaration([NotNull] SquirrelParser.FunctionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.functionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionParameter([NotNull] SquirrelParser.FunctionParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.functionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionParameter([NotNull] SquirrelParser.FunctionParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStat([NotNull] SquirrelParser.StatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStat([NotNull] SquirrelParser.StatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStatement([NotNull] SquirrelParser.BreakStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStatement([NotNull] SquirrelParser.BreakStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.switchCaseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchCaseStatement([NotNull] SquirrelParser.SwitchCaseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.switchCaseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchCaseStatement([NotNull] SquirrelParser.SwitchCaseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.statNotIncludingObjectLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatNotIncludingObjectLiteral([NotNull] SquirrelParser.StatNotIncludingObjectLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.statNotIncludingObjectLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatNotIncludingObjectLiteral([NotNull] SquirrelParser.StatNotIncludingObjectLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayLiteral([NotNull] SquirrelParser.ArrayLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayLiteral([NotNull] SquirrelParser.ArrayLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.initz"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitz([NotNull] SquirrelParser.InitzContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.initz"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitz([NotNull] SquirrelParser.InitzContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.negativeSign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNegativeSign([NotNull] SquirrelParser.NegativeSignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.negativeSign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNegativeSign([NotNull] SquirrelParser.NegativeSignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.incrementOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncrementOperator([NotNull] SquirrelParser.IncrementOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.incrementOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncrementOperator([NotNull] SquirrelParser.IncrementOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.decrementOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecrementOperator([NotNull] SquirrelParser.DecrementOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.decrementOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecrementOperator([NotNull] SquirrelParser.DecrementOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.equalequal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualequal([NotNull] SquirrelParser.EqualequalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.equalequal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualequal([NotNull] SquirrelParser.EqualequalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.notequal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotequal([NotNull] SquirrelParser.NotequalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.notequal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotequal([NotNull] SquirrelParser.NotequalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.arrayIndexing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayIndexing([NotNull] SquirrelParser.ArrayIndexingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.arrayIndexing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayIndexing([NotNull] SquirrelParser.ArrayIndexingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.openParen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpenParen([NotNull] SquirrelParser.OpenParenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.openParen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpenParen([NotNull] SquirrelParser.OpenParenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.closeParen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCloseParen([NotNull] SquirrelParser.CloseParenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.closeParen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCloseParen([NotNull] SquirrelParser.CloseParenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.deleteKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeleteKeyword([NotNull] SquirrelParser.DeleteKeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.deleteKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeleteKeyword([NotNull] SquirrelParser.DeleteKeywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.objectLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectLiteral([NotNull] SquirrelParser.ObjectLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.objectLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectLiteral([NotNull] SquirrelParser.ObjectLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyAssignment([NotNull] SquirrelParser.PropertyAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyAssignment([NotNull] SquirrelParser.PropertyAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExp([NotNull] SquirrelParser.ExpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExp([NotNull] SquirrelParser.ExpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.openSquareBracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpenSquareBracket([NotNull] SquirrelParser.OpenSquareBracketContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.openSquareBracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpenSquareBracket([NotNull] SquirrelParser.OpenSquareBracketContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.typeOf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeOf([NotNull] SquirrelParser.TypeOfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.typeOf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeOf([NotNull] SquirrelParser.TypeOfContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.ternaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTernaryOperator([NotNull] SquirrelParser.TernaryOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.ternaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTernaryOperator([NotNull] SquirrelParser.TernaryOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.classStatements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassStatements([NotNull] SquirrelParser.ClassStatementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.classStatements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassStatements([NotNull] SquirrelParser.ClassStatementsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.classVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassVariableDeclaration([NotNull] SquirrelParser.ClassVariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.classVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassVariableDeclaration([NotNull] SquirrelParser.ClassVariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.classConstructorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassConstructorDeclaration([NotNull] SquirrelParser.ClassConstructorDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.classConstructorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassConstructorDeclaration([NotNull] SquirrelParser.ClassConstructorDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.classConstructorArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassConstructorArgs([NotNull] SquirrelParser.ClassConstructorArgsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.classConstructorArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassConstructorArgs([NotNull] SquirrelParser.ClassConstructorArgsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.classConstructorArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassConstructorArg([NotNull] SquirrelParser.ClassConstructorArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.classConstructorArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassConstructorArg([NotNull] SquirrelParser.ClassConstructorArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.classFunctionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassFunctionDeclaration([NotNull] SquirrelParser.ClassFunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.classFunctionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassFunctionDeclaration([NotNull] SquirrelParser.ClassFunctionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.instanceofOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstanceofOperator([NotNull] SquirrelParser.InstanceofOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.instanceofOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstanceofOperator([NotNull] SquirrelParser.InstanceofOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.cloneOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCloneOperator([NotNull] SquirrelParser.CloneOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.cloneOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCloneOperator([NotNull] SquirrelParser.CloneOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.expNotIncludingObjectLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpNotIncludingObjectLiteral([NotNull] SquirrelParser.ExpNotIncludingObjectLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.expNotIncludingObjectLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpNotIncludingObjectLiteral([NotNull] SquirrelParser.ExpNotIncludingObjectLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.assignmentModificationOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentModificationOperator([NotNull] SquirrelParser.AssignmentModificationOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.assignmentModificationOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentModificationOperator([NotNull] SquirrelParser.AssignmentModificationOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArguments([NotNull] SquirrelParser.ArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArguments([NotNull] SquirrelParser.ArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SquirrelParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] SquirrelParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SquirrelParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] SquirrelParser.ArgumentContext context);
}
